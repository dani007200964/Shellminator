EXCLUDE=NONE
CATEGORY=Advanced

++--HEADER--++

/*
 * Created on Aug 10 2020
 *
 * Copyright (c) {{ YEAR }} - Daniel Hajnal
 * hajnal.daniel96@gmail.com
 * This file is part of the Shellminator project.
 * Modified {{ YEAR }}.{{ MONTH }}.{{ DAY }}
*/


++--INCLUDES--++

#include "math.h"

#include "Shellminator.hpp"
#include "GUI/Shellminator-Buttons.hpp"
#include "GUI/Shellminator-Notification.hpp"


++--GLOBAL_VARIABLES--++

// Create a Shellminator object, and initialize it to use {{ channel }}
Shellminator shell( &{{ channel }} );

ShellminatorNotification notification;

// Create a plotter object.
ShellminatorButton button( "Press" );

Shellminator::shellEvent_t buttonEvent;

++--FUNCTION_PROTOTYPES--++

// This function will be called, when the button is pressed.
void buttonClick( ShellminatorScreen* screen );

++--SETUP--++

// Clear the terminal
shell.clear();

{{ channel }}.println( "Program Start!" );

buttonEvent.type = Shellminator::SHELL_EVENT_KEY;
buttonEvent.data = (uint8_t)'x';

button.attachEvent( buttonEvent );
button.attachTriggerFunction( buttonClick );
button.setColor( Shellminator::RED );

shell.begin( "arnold" );
shell.beginScreen( &button, 100 );

++--LOOP--++

// Process the new data.
shell.update();

++--FUNCTION_IMPLEMENTATIONS--++

void buttonClick( ShellminatorScreen* screen ){
    Shellminator* parent;
    parent = screen -> getParent();
    if( parent == NULL ){
        return;
    }
    
    notification.setText( "Hurray!\nYou pressed the button!" );

    parent -> swapScreen( &notification );
}