EXCLUDE=NONE
CATEGORY=Basic

++--HEADER--++

/*
 * Created on Aug 10 2020
 *
 * Copyright (c) {{ YEAR }} - Daniel Hajnal
 * hajnal.daniel96@gmail.com
 * This file is part of the Shellminator project.
 * Modified {{ YEAR }}.{{ MONTH }}.{{ DAY }}
 *
 * To test this example, you need a terminal emulator like PuTTY or Minicom.
 * This example shows a simple setup for Shellminator. It will create an
 * interactive interface, but it does not execute any command.
 * See Shellminator_execute example for further information.
*/

++--INCLUDES--++

#include "Shellminator.hpp"

++--GLOBAL_VARIABLES--++

// Create a Shellminator object, and initialize it to use {{ channel }}
Shellminator shell( &{{ channel }} );

int format_table[] = {
    Shellminator::BOLD,
    Shellminator::LOW_INTENSITY,
    Shellminator::ITALIC,
    Shellminator::UNDERLINE,
    Shellminator::BLINKING,
    Shellminator::REVERSE,
    Shellminator::BACKGROUND,
    Shellminator::INVISIBLE
};

int format_table_size = sizeof( format_table ) / sizeof( format_table[ 0 ] );

const char* bold_str = "Bold";
const char* low_int_str = "Low Intensity";
const char* italic_str = "Italic";
const char* underline_str = "Underline";
const char* blink_str = "Blink";
const char* reverse_str = "Reverse";
const char* background_str = "Background";
const char* invisible_str = "Invisible";

const char* name_table[] = {
    bold_str,
    low_int_str,
    italic_str,
    underline_str,
    blink_str,
    reverse_str,
    background_str,
    invisible_str
};

int color_table[] = {
    Shellminator::BLACK,
    Shellminator::RED,
    Shellminator::GREEN,
    Shellminator::YELLOW,
    Shellminator::BLUE,
    Shellminator::MAGENTA,
    Shellminator::CYAN,
    Shellminator::WHITE 
};

int color_table_size = sizeof( color_table ) / sizeof( color_table[ 0 ] );

int background_color_table[] = {
    Shellminator::BG_BLACK,
    Shellminator::BG_RED,
    Shellminator::BG_GREEN,
    Shellminator::BG_YELLOW,
    Shellminator::BG_BLUE,
    Shellminator::BG_MAGENTA,
    Shellminator::BG_CYAN,
    Shellminator::BG_WHITE 
};


++--FUNCTION_PROTOTYPES--++

++--SETUP--++

int x;
int y;

// Clear the terminal
shell.clear();
{{ channel }}.println( "--- Style Matrix ---");
{{ channel }}.println();

for( y = 0; y < format_table_size; y++ ){
    for( x = 0; x < color_table_size; x++ ){
        shell.format( &{{ channel }}, color_table[ x ], format_table[ y ] );
        {{ channel }}.print( "X");
        shell.format( &{{ channel }}, Shellminator::REGULAR, Shellminator::WHITE );
    }
    {{ channel }}.print( "  " );
    {{ channel }}.println( name_table[ y ] );
}

{{ channel }}.println();
{{ channel }}.println( "--- Background Matrix ---");
{{ channel }}.println();

for( y = 0; y < color_table_size; y++ ){
    for( x = 0; x < color_table_size; x++ ){
        shell.format( &{{ channel }}, color_table[ x ], background_color_table[ y ] );
        {{ channel }}.print( "X");
        shell.format( &{{ channel }}, Shellminator::REGULAR, Shellminator::WHITE );
    }
    {{ channel }}.println();
}

++--LOOP--++

++--FUNCTION_IMPLEMENTATIONS--++
